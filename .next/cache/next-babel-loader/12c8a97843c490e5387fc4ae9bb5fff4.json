{"ast":null,"code":"let csvToJson = require('convert-csv-to-json');\n/**\r\n * @description api\r\n * @param req\r\n * @param res\r\n */\n\n\nconst nb = (req, res) => {\n  /* Convert csv to json */\n  const data = csvToJson.fieldDelimiter(',').getJsonFromCsv('./shared/data/iris.csv'); // const nb = new NaiveBayes()\n  // nb.group(data)\n  // let predictions = nb.predict(data)\n  // let correct = 0\n  // for (let i = 0; i < predictions.length; i++) {\n  //   let tmp = data[i][Object.keys(data[i])[Object.keys(data[i]).length - 1]]\n  //   if (predictions[i] == data[i].species) correct++\n  // }\n  // // console.log(correct)\n  // // console.log(data.length)\n  // console.log((correct / data.length) * 100)\n\n  res.send(JSON.stringify(data, null, 2));\n};\n\nexport default nb;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A4/pages/api/nb.ts"],"names":["csvToJson","require","nb","req","res","data","fieldDelimiter","getJsonFromCsv","send","JSON","stringify"],"mappings":"AAGA,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,EAAE,GAAG,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AACxD;AACA,QAAMC,IAAI,GAAGL,SAAS,CACnBM,cADU,CACK,GADL,EAEVC,cAFU,CAEK,wBAFL,CAAb,CAFwD,CAMxD;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEAH,EAAAA,GAAG,CAACI,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeL,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAT;AACD,CAvBD;;AAyBA,eAAeH,EAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\nimport { NaiveBayes } from '../../shared/class/NaiveBayes'\r\n\r\nlet csvToJson = require('convert-csv-to-json')\r\n\r\n/**\r\n * @description api\r\n * @param req\r\n * @param res\r\n */\r\nconst nb = (req: NextApiRequest, res: NextApiResponse) => {\r\n  /* Convert csv to json */\r\n  const data = csvToJson\r\n    .fieldDelimiter(',')\r\n    .getJsonFromCsv('./shared/data/iris.csv')\r\n\r\n  // const nb = new NaiveBayes()\r\n  // nb.group(data)\r\n  // let predictions = nb.predict(data)\r\n\r\n  // let correct = 0\r\n\r\n  // for (let i = 0; i < predictions.length; i++) {\r\n  //   let tmp = data[i][Object.keys(data[i])[Object.keys(data[i]).length - 1]]\r\n\r\n  //   if (predictions[i] == data[i].species) correct++\r\n  // }\r\n\r\n  // // console.log(correct)\r\n  // // console.log(data.length)\r\n  // console.log((correct / data.length) * 100)\r\n\r\n  res.send(JSON.stringify(data, null, 2))\r\n}\r\n\r\nexport default nb\r\n"]},"metadata":{},"sourceType":"module"}