{"ast":null,"code":"let csvToJson = require('convert-csv-to-json');\n/**\r\n * @description calculate mean\r\n * @param arr\r\n */\n\n\nconst mean = arr => {};\n/**\r\n * @description api\r\n * @param req\r\n * @param res\r\n */\n\n\nconst nb = (req, res) => {\n  let classes = new Map(); // storing classes\n\n  /* Convert csv to json */\n\n  const rawJson = csvToJson.fieldDelimiter(',').getJsonFromCsv('./shared/data/iris.csv');\n  /* Retrieve classes */\n\n  for (let i = 0; i < rawJson.length; i++) {\n    console.log(rawJson[i].length);\n\n    if (!classes.has(rawJson[i].species)) {\n      classes.set(rawJson[i].species, null);\n    }\n  }\n  /* Map -> Array */\n\n\n  let arr = Array.from(classes.keys()); //   mean(rawJson)\n\n  res.json(rawJson);\n};\n\nexport default nb;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A4/pages/api/nb.ts"],"names":["csvToJson","require","mean","arr","nb","req","res","classes","Map","rawJson","fieldDelimiter","getJsonFromCsv","i","length","console","log","has","species","set","Array","from","keys","json"],"mappings":"AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,IAAI,GAAIC,GAAD,IAAiC,CAAE,CAAhD;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,EAAE,GAAG,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AACxD,MAAIC,OAAO,GAAG,IAAIC,GAAJ,EAAd,CADwD,CAChC;;AAExB;;AACA,QAAMC,OAAO,GAAGT,SAAS,CACtBU,cADa,CACE,GADF,EAEbC,cAFa,CAEE,wBAFF,CAAhB;AAIA;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCE,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACG,CAAD,CAAP,CAAWC,MAAvB;;AACA,QAAI,CAACN,OAAO,CAACS,GAAR,CAAYP,OAAO,CAACG,CAAD,CAAP,CAAWK,OAAvB,CAAL,EAAsC;AACpCV,MAAAA,OAAO,CAACW,GAAR,CAAYT,OAAO,CAACG,CAAD,CAAP,CAAWK,OAAvB,EAAgC,IAAhC;AACD;AACF;AAED;;;AACA,MAAId,GAAG,GAAGgB,KAAK,CAACC,IAAN,CAAWb,OAAO,CAACc,IAAR,EAAX,CAAV,CAjBwD,CAmBxD;;AAEAf,EAAAA,GAAG,CAACgB,IAAJ,CAASb,OAAT;AACD,CAtBD;;AAwBA,eAAeL,EAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\nlet csvToJson = require('convert-csv-to-json')\r\n\r\n/**\r\n * @description calculate mean\r\n * @param arr\r\n */\r\nconst mean = (arr: Array<number | string>) => {}\r\n\r\n/**\r\n * @description api\r\n * @param req\r\n * @param res\r\n */\r\nconst nb = (req: NextApiRequest, res: NextApiResponse) => {\r\n  let classes = new Map() // storing classes\r\n\r\n  /* Convert csv to json */\r\n  const rawJson = csvToJson\r\n    .fieldDelimiter(',')\r\n    .getJsonFromCsv('./shared/data/iris.csv')\r\n\r\n  /* Retrieve classes */\r\n  for (let i = 0; i < rawJson.length; i++) {\r\n    console.log(rawJson[i].length)\r\n    if (!classes.has(rawJson[i].species)) {\r\n      classes.set(rawJson[i].species, null)\r\n    }\r\n  }\r\n\r\n  /* Map -> Array */\r\n  let arr = Array.from(classes.keys())\r\n\r\n  //   mean(rawJson)\r\n\r\n  res.json(rawJson)\r\n}\r\n\r\nexport default nb\r\n"]},"metadata":{},"sourceType":"module"}