{"ast":null,"code":"import { NaiveBayes } from '../../shared/class/NaiveBayes';\n\nlet csvToJson = require('convert-csv-to-json');\n/**\r\n * @description api\r\n * @param req\r\n * @param res\r\n */\n\n\nconst nb = (req, res) => {\n  /* Convert csv to json */\n  const data = csvToJson.fieldDelimiter(',').getJsonFromCsv('./shared/data/banknote_authentication.csv');\n  const nb = new NaiveBayes();\n  nb.group(data);\n  let predictions = nb.predict(data);\n  let correct = 0;\n\n  for (let i = 0; i < predictions.length; i++) {\n    if (predictions[i] == data[i].class) correct++;\n  }\n\n  console.log(correct);\n  res.send(JSON.stringify(data, null, 2));\n};\n\nexport default nb;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A4/pages/api/nb.ts"],"names":["NaiveBayes","csvToJson","require","nb","req","res","data","fieldDelimiter","getJsonFromCsv","group","predictions","predict","correct","i","length","class","console","log","send","JSON","stringify"],"mappings":"AACA,SAASA,UAAT,QAA2B,+BAA3B;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,EAAE,GAAG,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AACxD;AACA,QAAMC,IAAI,GAAGL,SAAS,CACnBM,cADU,CACK,GADL,EAEVC,cAFU,CAEK,2CAFL,CAAb;AAIA,QAAML,EAAE,GAAG,IAAIH,UAAJ,EAAX;AACAG,EAAAA,EAAE,CAACM,KAAH,CAASH,IAAT;AACA,MAAII,WAAW,GAAGP,EAAE,CAACQ,OAAH,CAAWL,IAAX,CAAlB;AAEA,MAAIM,OAAO,GAAG,CAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACI,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,QAAIH,WAAW,CAACG,CAAD,CAAX,IAAkBP,IAAI,CAACO,CAAD,CAAJ,CAAQE,KAA9B,EAAqCH,OAAO;AAC7C;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEAP,EAAAA,GAAG,CAACa,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAed,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAT;AACD,CAnBD;;AAqBA,eAAeH,EAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\nimport { NaiveBayes } from '../../shared/class/NaiveBayes'\r\n\r\nlet csvToJson = require('convert-csv-to-json')\r\n\r\n/**\r\n * @description api\r\n * @param req\r\n * @param res\r\n */\r\nconst nb = (req: NextApiRequest, res: NextApiResponse) => {\r\n  /* Convert csv to json */\r\n  const data = csvToJson\r\n    .fieldDelimiter(',')\r\n    .getJsonFromCsv('./shared/data/banknote_authentication.csv')\r\n\r\n  const nb = new NaiveBayes()\r\n  nb.group(data)\r\n  let predictions = nb.predict(data)\r\n\r\n  let correct = 0\r\n\r\n  for (let i = 0; i < predictions.length; i++) {\r\n    if (predictions[i] == data[i].class) correct++\r\n  }\r\n\r\n  console.log(correct)\r\n\r\n  res.send(JSON.stringify(data, null, 2))\r\n}\r\n\r\nexport default nb\r\n"]},"metadata":{},"sourceType":"module"}